#version 330

uniform mat4 MVP;
in vec3 pixcolor;
in vec3 pos;
out vec4 color;
void main()
{
   vec3 lightDir = vec3(0.0,0.0,5.0);
   vec3 N;
   N.xy = gl_PointCoord* 2.0 - vec2(1.0);   
   float mag = dot(N.xy, N.xy);
   if(mag > 1.0) discard;
   vec3 cameraNormal = vec3(N.xy, sqrt(1.0 - mag));
   vec3 cameraPos = (cameraNormal * 10) + pos;
   N.z = sqrt(1.0-mag);

   vec4 pixelPos = vec4(pos + N*0.1, 1.0);
   vec4 clipPos = MVP*pixelPos;
   float depth = clipPos.z / clipPos.w;
   
   float diffuse = max(0.0, dot(lightDir, cameraPos));
   //color = vec4(pixcolor,1.0)*diffuse;
   color = vec4(depth);
}