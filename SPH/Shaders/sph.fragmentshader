#version 330 core

in vec3 pixcolor;
out vec4 vFragColor;
void main()
{
// calculate normal from texture coordinates
   vec3 lightDir = vec3(0.0,0.0,5.0);
   vec3 N;
   N.xy = gl_PointCoord* 2.0 - vec2(1.0);
   
   float mag = dot(N.xy, N.xy);
   if(mag > 1.0) 
     discard; // kill pixels outside circle
   N.z = 1.0;//sqrt(1.0-mag);
   // calculate lighting
   float diffuse = max(0.0, dot(lightDir, N));
   vFragColor = vec4(diffuse,diffuse,diffuse,1); //vec4(pixcolor,1)*diffuse;
}